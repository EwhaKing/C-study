Discussion Questions

1. Why should a game programmer use the STL?
STL의 컨테이너와 알고리즘은 매우 최적화되어 있으며, 효율적이고 성능이 뛰어납니다. STL 구성 요소는 잘 문서화되어 있고 표준화되어 있기 때문에 STL을 사용하면 코드가 더 일관되고 예측 가능해집니다. 그리고 개발 시간을 단축시켜 줍니다.

2. What are the advantages of a vector over an array?
벡터는 크기를 동적으로 늘리고 줄일 수 있지만, 배열은 컴파일 시 크기가 고정됩니다. 게다가 벡터는 자체 메모리 관리를 처리하므로 배열에서 흔히 발생하는 메모리 누수와 버퍼 오버플로우 가능성을 줄여줍니다.

3. What types of game objects might you store with a vector?
- 캐릭터: 플레이어 캐릭터나 NPC(비플레이어 캐릭터)를 저장할 수 있습니다.
- 아이템: 게임 내의 아이템(예: 무기, 도구, 소비품)을 저장할 수 있습니다.
- 레벨 요소: 게임 레벨의 특정 요소(예: 장애물, 트리거)를 저장할 수 있습니다.
- 이벤트: 게임 이벤트나 퀘스트 관련 데이터를 저장할 수 있습니다.
- 물리 객체: 물리 엔진에서 사용하는 객체(예: 충돌체, 물리 효과)를 저장할 수 있습니다.

4. How do performance characteristics of a container type affect the decision to use it?
특정 사용 사례에 맞는 적절한 컨테이너를 선택하는 데에 있어 performance characteristics of a container type 중요한 요소입니다. 예를 들어, STL 알고리즘은 컨테이너의 성능 특성에 따라 다르게 작동할 수 있습니다.

5. Why is program planning important?
계획을 세우면 개발 목표와 요구 사항을 명확히 정의할 수 있을 뿐 아니라 개발 시간과 인력, 자원을 효율적으로 배분할 수 있습니다. 더불어 잠재적인 문제를 사전에 식별하고 해결책을 마련함으로써 프로젝트 진행 중의 위험을 줄일 수 있습니다.
